BEGIN TRANSACTION;
DROP TABLE IF EXISTS `user`;
CREATE TABLE IF NOT EXISTS `user` (
	`ID`	INTEGER NOT NULL DEFAULT 1 PRIMARY KEY AUTOINCREMENT UNIQUE,
	`Name`	TEXT NOT NULL,
	`Email`	TEXT NOT NULL UNIQUE,
	`Password`	TEXT NOT NULL,
	`BankNumber`	NUMERIC,
	`PhoneNumber`	NUMERIC NOT NULL,
	`car`	INTEGER
);
INSERT INTO `user` (ID,Name,Email,Password,BankNumber,PhoneNumber,car) VALUES (1,'maryam','mshz','123',222,203520,1);
DROP TABLE IF EXISTS `room`;
CREATE TABLE IF NOT EXISTS `room` (
	`Id`	INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT UNIQUE,
	`ApartmentId`	INTEGER NOT NULL,
	`ChargeId`	INTEGER,
	`RentalPrice`	NUMERIC,
	`ZipCode`	TEXT,
	`Likes`	NUMERIC,
	`NumberOfBedrooms`	INTEGER NOT NULL,
	`RoomNumber`	NUMERIC NOT NULL,
	FOREIGN KEY(`ApartmentId`) REFERENCES `apartment`(`Id`),
	FOREIGN KEY(`ChargeId`) REFERENCES `charge`(`Id`)
);
DROP TABLE IF EXISTS `rent`;
CREATE TABLE IF NOT EXISTS `rent` (
	`Id`	INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT UNIQUE,
	`LeaseId`	INTEGER NOT NULL,
	`PaymentID`	INTEGER DEFAULT 0,
	`RentFee`	NUMERIC,
	`Date`	TEXT NOT NULL,
	`LateFee`	INTEGER,
	FOREIGN KEY(`LeaseId`) REFERENCES `Lease`(`Id`),
	FOREIGN KEY(`PaymentID`) REFERENCES `payment`(`Id`)
);
DROP TABLE IF EXISTS `payment`;
CREATE TABLE IF NOT EXISTS `payment` (
	`Id`	INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT UNIQUE,
	`Amount`	NUMERIC NOT NULL,
	`Date`	TEXT NOT NULL,
	`PaymentTitle`	TEXT
);
DROP TABLE IF EXISTS `messages`;
CREATE TABLE IF NOT EXISTS `messages` (
	`Id`	INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT UNIQUE,
	`SenderID`	INTEGER NOT NULL,
	`ReceiverID`	INTEGER NOT NULL,
	`Title`	TEXT,
	`Body`	TEXT,
	FOREIGN KEY(`SenderID`) REFERENCES `user`(`ID`),
	FOREIGN KEY(`ReceiverID`) REFERENCES `user`(`ID`)
);
DROP TABLE IF EXISTS `costs`;
CREATE TABLE IF NOT EXISTS `costs` (
	`Id`	INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT UNIQUE,
	`Title`	TEXT,
	`ManagerId`	INTEGER NOT NULL,
	`Date`	TEXT,
	`Amount`	NUMERIC NOT NULL,
	`ApartmentId`	INTEGER NOT NULL,
	FOREIGN KEY(`ApartmentId`) REFERENCES `apartment`(`Id`)
);
DROP TABLE IF EXISTS `comments`;
CREATE TABLE IF NOT EXISTS `comments` (
	`Id`	INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT UNIQUE,
	`RoomId`	INTEGER NOT NULL,
	`TenantId`	INTEGER NOT NULL,
	`Title`	INTEGER NOT NULL,
	`Body`	INTEGER NOT NULL,
	FOREIGN KEY(`RoomId`) REFERENCES `room`(`Id`),
	FOREIGN KEY(`TenantId`) REFERENCES `user`(`ID`)
);
DROP TABLE IF EXISTS `charge`;
CREATE TABLE IF NOT EXISTS `charge` (
	`Id`	INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT UNIQUE,
	`Amount`	INTEGER,
	`Date`	TEXT,
	`PaymentID`	INTEGER NOT NULL,
	FOREIGN KEY(`PaymentID`) REFERENCES `payment`(`Id`)
);
DROP TABLE IF EXISTS `apartment`;
CREATE TABLE IF NOT EXISTS `apartment` (
	`Id`	INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT UNIQUE,
	`Name`	TEXT,
	`ManagerId`	INTEGER NOT NULL UNIQUE,
	`Adress`	TEXT,
	`NumberOfRooms`	NUMERIC,
	FOREIGN KEY(`ManagerId`) REFERENCES `user`(`ID`)
);
DROP TABLE IF EXISTS `Lease`;
CREATE TABLE IF NOT EXISTS `Lease` (
	`Id`	INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT UNIQUE,
	`TenantId`	INTEGER NOT NULL,
	`RoomID`	INTEGER NOT NULL,
	`Deposit`	REAL,
	`StartDate`	TEXT NOT NULL,
	`EndDate`	TEXT,
	`RentFee`	NUMERIC,
	FOREIGN KEY(`RoomID`) REFERENCES `room`(`Id`),
	FOREIGN KEY(`TenantId`) REFERENCES `user`(`ID`)
);
DROP VIEW IF EXISTS `myRooms`;
CREATE VIEW myRooms
as
Select room.RoomNumber,room.NumberOfBedrooms,Lease.RentFee
 from user,Lease,room 
 where user.ID = Lease.Id and room.Id = Lease.id;
COMMIT;
